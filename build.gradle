plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'course-review'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

task buildFrontEnd(type: Exec) {
    workingDir "./src/frontend"
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'npm.cmd', 'install'
        commandLine 'npm.cmd', 'run', 'build'
    } else {
        commandLine 'npm', 'install'
        commandLine 'npm', 'run', 'build'
    }
}
// todo : In real Server,  => npm task

processResources.dependsOn 'buildFrontEnd'

test {
    useJUnitPlatform()
}
